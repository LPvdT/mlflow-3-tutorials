target-version = "py312"
line-length = 80
unsafe-fixes = true

lint.select = [
    "ALL",  # All rules
    "F",    # pyflakes
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "C90",  # mccabe
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "BLE",  # flake8-blind-except
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "EXE",  # flake8-executable
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "RUF",  # Ruff-specific rules
    "F401", # unused imports (redundant if already in F, but for clarity)
]

lint.ignore = [
    "D",   # pydocstyle
    "TD",  # Author TODO
    "CPY", # Flake8-copyright
]

lint.extend-ignore = [
    "FIX002", # Resolve TODO
    "B008",   # function call in argument defaults
    "E501",   # line too long
    "S603",   # subprocess starting a process with a partial executable path
    "S607",   # Starting a process with a partial executable path
    "S404",   # Subprocess
    "PGH004", # Use specific rule codes when using `noqa`
    "PGH003", # Use specific rule codes when using `type: ignore`
    "N806",   # Variable name should be lowercase
]

lint.fixable = [
    "ALL",
]

lint.exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "migrations",
]

[lint.per-file-ignores]
"**/tests/*" = [
    "S101", # Allow assert statements in tests
]

[lint.mccabe]
max-complexity = 10

[format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 80
preview = true
