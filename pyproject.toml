[project]
name = "mlflow-3-tutorials"
version = "0.1.0"
description = "Tutorials for MLflow 3"
readme = "README.md"
authors = [
    { name = "Laurens van der Tas", email = "laurens.vandertas@gmail.com" },
]
requires-python = ">=3.12"
dependencies = [
    "hyperopt>=0.2.7",
    "loguru>=0.7.3",
    "mlflow>=3.1.1",
    "numpy>=2.1.3",
    "pandas>=2.3.0",
    "scikit-learn>=1.7.0",
]

[project.scripts]
# Repository commands
run_sync = "mlflow_3_tutorials.lib.scripts:uv_sync"
run_precommit = "mlflow_3_tutorials.lib.scripts:run_precommit"
run_pyment = "mlflow_3_tutorials.lib.scripts:run_pyment"
# MLflow commands
remove_experiments = "mlflow_3_tutorials.lib.scripts:remove_all_experiments"
start_server = "mlflow_3_tutorials.lib.scripts:start_tracking_server"
# Project commands
first_model = "mlflow_3_tutorials.first_model:main"
tuning_deployment = "mlflow_3_tutorials.tuning_deployment:main"
serve_wine_model = "mlflow_3_tutorials.lib.scripts:serve_wine_model"
deep_learning = "mlflow_3_tutorials.deep_learning_quickstart:main"

[project.optional-dependencies]
tensorflow = [
    "keras>=3.10.0",
    "tensorflow>=2.19.0",
]
mlflow_extras = [
    "mlflow[extras]>=3.1.1",
]
pytorch = [
    "torch>=2.7.1",
    "torchvision>=0.22.1",
]

[dependency-groups]
dev = [
    "basedpyright>=1.29.5",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "mccabe>=0.7.0",
    "pre-commit>=4.2.0",
    "pyment>=0.3.3",
    "ty>=0.0.1a13",
]
test = [
    "pytest>=8.4.1",
    "pytest-sugar>=1.0.0",
]

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py312"
line-length = 80
unsafe-fixes = true
preview = true

select = [
    "ALL",
]

ignore = [
    "I",   # isort
    "D",   # pydocstyle
    "DOC", # pydoclint
    "TD",  # comments TODO
    "CPY", # copyright
]

extend-ignore = [
    # pycodestyle
    "E501",

    # bandit
    "S603",
    "S607",
    "S404",

    # flake8-builtins
    "B008",

    # pep8-naming
    "N806",

    # ruff plugins hygiene
    "PGH003",
    "PGH004",

    # flake8-refactor
    "PLR0914",

    # fixme-style TODO
    "FIX002",

    # trailing comma
    "COM812",

    # Argument name should be lowercase
    "N803",

    # Found commented-out code
    "ERA001",
]

fixable = [
    "ALL",
]

exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "migrations",
]

[tool.ruff.per-file-ignores]
"**/tests/*" = [
    "S101",
]
"**/scripts/*" = [
    "INP001",
]
"**/migrations/*" = [
    "E501",
    "B008",
    "F401",
    "D",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 80
preview = true
